var biggestHeight = 0;//Card type and card codes.var DW_AMEX_CARD = "Amex";var DW_DISCOVER_CARD = "Discover";	var DW_MASTER_CARD = "MasterCard";var DW_VISA_CARD = "Visa";var PG_AMEX_CARD = "AX";var PG_DISCOVER_CARD = "NS";var PG_MASTER_CARD = "MC";var PG_VISA_CARD = "VS";//A variable to track the number of unsuccessful attemptsvar unsuccessful_attempts = 0;function equalHeight() {	$('ul#search-result-items li.grid-tile').each(function(){		if($(this).height() > biggestHeight){			biggestHeight = $(this).height();		}	});	$('ul#search-result-items li.grid-tile').height(biggestHeight);}$(document).ready(function() {	/* header: UI fix of search box cursor over the my account and country drop down as well as mini-cart overlay */	if ($.browser.msie) {		$(document).on('hover', 'ul.menu-utility-user li.myaccount, ul.menu-utility-user li.country-header, a.mini-cart-link', function() {			$('.header-search #q').blur();		});	}		//ipad virtual keyboard overlap fix 	if ((navigator.userAgent.indexOf('iPad') != -1)) {		$("body").addClass("iPadcss"); 	}		// taking window scroll to review form.	if ($('.pluck-review-create-review-rollup').length) {		$('.pluck-review-create-review-rollup').on('click', function() {			var ele = $('#pluck'); 		    $(window).scrollTop(ele.offset().top).scrollLeft(ele.offset().left);		});	}		//Add required label to the state dropdown for wholesale opportunities form	$("#wholesaleopportunityForm label[for$='_stateCA']").prepend('<span class="required-indicator">*</span>');		//A method that triggers the 'review order' on click of the paypal logo	$('.logo_PayPal').on('click',function(){		$('#revieworder').click();	});		//set autocomplete off to form fields with class autocompleteoff	$("input.autocompleteoff").empty().attr("autocomplete","off");	$("#showError").hide();			//set the starting bigestHeight variable	if($('ul#search-result-items').length>0) {		//equalHeight();		}		// Common cancel button js for close dialog	jQuery(".cancel-button").live('click',function() {		app.dialog.close();		return false;	})		var categorySlotHtml = $("#main #category-slot").html();	if(categorySlotHtml!=""){		$("#category-slot-content").html(categorySlotHtml);		$("#main #category-slot").remove();	}	if($(".search-result-options .refinements .refinement").length == 0) { 		$(".search-result-options .sort-by").css('padding','0');	} 		if($(".trackanorder").length == 1) { 		$("#secondary").css('display','none');	} 			/* award script */	$('#more-less').click(function(){	    $(".more-block,#award,#shortDescription").toggle();	    var linktxt = $(this).text();	    if(linktxt=='More') {	    	$(this).text('Less').removeClass('more').addClass('less');		    }	    else {	    	$(this).text('More').removeClass('less').addClass('more');	    }	});		/* collectionToggle  scripts */	$('#collectionToggle').click(function(){	    $(".collectionTogglebox").slideToggle('slow');	    if($(this).hasClass('expand')) {	    	$(this).removeClass('expand').addClass('collapse');		    }	    else {	    	$(this).removeClass('collapse').addClass('expand');	    }	});		/* dialog box shadow */	if ($.browser.msie > 7) {				$('.ui-dialog').boxShadow( 0, 0, 5, "#999");				} 		crabtree = function(){		return {		}	}();		crabtree.benefits = function(){		return {			init:function(){				//To ensure that the animation is not triggered while already in progress.				var inTranstion = false;				$(".benefitsbuttonUp").click(function(){					if(inTranstion == false) {						inTranstion = true;						var benefitsHeight, currentHeight, animateTo, slotEl, diplayContent;						slotEl = $("#category-slot-content");						//get height of benefits content						benefitsHeight = slotEl.find(".productlist").height();						currentHeight = slotEl.height();												if(slotEl.hasClass("expanded")){							//then we need to collapse it							$(slotEl).removeClass("expanded");							animateTo = currentHeight-benefitsHeight-80;						    $(this).removeClass('benefitsbuttonDown').addClass('benefitsbuttonUp');						    $(this).text("Show Benefits");						} else{							//then we need to expand it								slotEl.addClass("expanded");							animateTo = benefitsHeight+currentHeight+80;							$(this).removeClass('benefitsbuttonUp').addClass('benefitsbuttonDown');							$(this).text("Hide Benefits");						}																slotEl.animate({"height":animateTo},1200,"easeInOutQuart", function(){inTranstion = false;});					}				});			}		}	}();		setTimeout(function(){ 		crabtree.benefits.init();	},10);		/* scroll top */	$(window).scroll(function(){    			if($('.ui-widget-overlay').is(':visible')){			if ((navigator.userAgent.indexOf('iPad') == -1)) {				$('.ui-dialog-content').dialog({position:'center'});			}							    $(".scrollup").hide();		}		else{				if ($(this).scrollTop() > 100) {			$('.scrollup').fadeIn();		} else {			$('.scrollup').fadeOut();		}		}	});    // for below breadcrum category dropdown link		$("#categoryDropMenu h1").live('click', function () {		$('.grid-navigation').toggle();		$("#categoryDropMenu").toggleClass("upArrow");		return false;    });	$('.grid-navigation').click(function(e) {        e.stopPropagation();    });    //To display day dropdown based on month selected ---Begin	jQuery("select[id$='_birthdayfields_day1']").hide();	$("select[id$='_birthdayfields_day1']").attr('disabled', true);		jQuery("select[id$='_birthdayfields_day1']").removeClass("required");	jQuery("select[id$='_birthdayfields_day2']").hide();	$("select[id$='_birthdayfields_day2']").attr('disabled', true);	jQuery("select[id$='_birthdayfields_day2']").removeClass("required");		 populateBirthdayDropdown();	jQuery("select[id$='_birthdayfields_month']").change(function(){			jQuery("select[id$='_birthdayfields_day2']").val("")		jQuery("select[id$='_birthdayfields_day1']").val("")		jQuery("select[id$='_birthdayfields_day']").val("")	    populateBirthdayDropdown();	});	$("input[id$='_showPlatinumReward']").click(function() {		var form = $("#RegistrationForm");		var countrySelect = form.find("select[id$='_country']");		app.util.updateStateOptions(countrySelect);		if ($("input[id$='_showPlatinumReward']").is(':checked')) {						 			$('#platinumRewardNew :input').attr('disabled', false);								jQuery('#platinumRewardNew').show();		}			if ($("input[id$='_showPlatinumReward']").is(':unchecked')) {						  			$('#platinumRewardNew :input').attr('disabled', true);  												 				   			$('#platinumRewardNew').hide();		}	});		//Updating state options on rendering of the platinum reward page under my account section.	var form = $("#edit-address-form");	var countrySelect = form.find("select[id$='_country']");	app.util.updateStateOptions(countrySelect);		//Updating state options on rendering platium page on create account.	var form = $("#RegistrationForm");	var countrySelect = form.find("select[id$='_country']");	app.util.updateStateOptions(countrySelect);		/*Link highlighting function starts*/    var currenturl = window.location.href;	$("#yearsdata li:first a").addClass("active");	$('#my-account-menu li a').each(function(){		if(currenturl==this.href){			$(this).addClass('active');					}	});		$("ul#yearsdata li a").each(function(){		if(currenturl==this.href){			$(this).addClass('active');					}	});			if($("#helpinner").length){					$("a#help").addClass("active")	}			if($("ul#yearsdata li a.active").length >1){			$("#yearsdata li:first a").removeClass("active");			$("#yearsdata li:first a").addClass("first-year");	}		$("ul#yearsdata li a.active").click(function(e){		e.preventDefault();	})		 	$("textarea[name$='_contactus_comment'],textarea[name$='_returnform_message'] ").bind("keyup keydown", function() { 		   var  len =  jQuery(this).val().length;	    if (len >= 250) {	    	jQuery(this).val(jQuery(this).val().substring(0, 250));	    }	    if(len <=250) {	    	jQuery("#charLeft").html(250 - len);	    	len=jQuery("#charLeft").length;	    }	});			if ($("textarea[name$='_contactus_comment'],textarea[name$='_returnform_message']").length) {		$("textarea[name$='_contactus_comment'],textarea[name$='_returnform_message']").keyup();	}		//For donation request form	var donationForm = $("#donationrequest");	if(donationForm.length > 0) {		//Remove the mandatory check from the state		donationForm.find("select[name$='_state']").removeClass('required');		donationForm.find("select[name$='_state']").parent().find('.required-indicator').remove();				//To display day dropdown based on month selected		populateDateDropdown('lastdonation');		populateDateDropdown('eventdatefields');		populateDateDropdown('donationdatefields');		var istaxexempt = donationForm.find("input[name='taxExemptInput']");		var notfirsttimer = donationForm.find("input[name='notfirsttimerInput']");		var mailingaddsame = donationForm.find("input[name='mailingaddsameInput']");		var marketingoppor = donationForm.find("input[name='marketingopporInput']");		var itemsusage = donationForm.find("select[name$='_itemsusage']");		var lastdonationyear = donationForm.find("#lastdonationyear");		var eventdateyear = donationForm.find("#eventdateyear");		var donationdateyear = donationForm.find("#donationdateyear");		var lastdonationmonth = jQuery("select[id$='_lastdonation_month']");		var eventdateymonth = jQuery("select[id$='_eventdatefields_month']");		var donationdatemonth = jQuery("select[id$='_donationdatefields_month']");				//Trigger the population of the hidden fields as per the default values of the radio buttons		populateHiddenField(istaxexempt, 'istaxexempt');		populateHiddenField(notfirsttimer, 'notfirsttimer');		populateHiddenField(marketingoppor, 'marketingoppor');				//Bind the event for the population of the hidden fields as per the change in the values of the radio buttons		istaxexempt.on("change", function(e){			populateHiddenField(istaxexempt, 'taxexempt');		});				notfirsttimer.on("change", function(e){			populateHiddenField(notfirsttimer, 'notfirsttimer');			var selectedvalue = notfirsttimer.filter(':checked').val();			if(selectedvalue == 'y') {				$("#lastdonationdate").show();			}			else {				$("#lastdonationdate").hide();			}		});				marketingoppor.on("change", function(e){			populateHiddenField(marketingoppor, 'marketingoppor');			var selectedvalue = marketingoppor.filter(':checked').val();			if(selectedvalue == 'y') {				$("textarea[name$='_donationrecog']").removeClass('required');				$("#donationrecog").hide();			}			else {				$("textarea[name$='_donationrecog']").addClass('required');				$("#donationrecog").show();			}		});				mailingaddsame.on("change", function(e){			var mailingaddsamevalue = mailingaddsame.filter(':checked').val();			if(mailingaddsamevalue == 'y') {				$("input[name$='_mailingaddress1']").val($("input[name$='_address1']").val());				$("input[name$='_mailingaddress2']").val($("input[name$='_address2']").val());				$("input[name$='_mailingcity']").val($("input[name$='_city']").val());				$("input[name$='_mailingzip']").val($("input[name$='_zip']").val());				$("select[name$='_mailingcountry']").val($("select[name$='_country']").val());				app.util.updateMailingStateOptions($("select[name$='_country']"));				$("select[name$='_mailingstate']").val($("select[name$='_state']").val());			}			else {				$("input[name$='_mailingaddress1']").val("");				$("input[name$='_mailingaddress2']").val("");				$("input[name$='_mailingcity']").val("");				$("select[name$='_mailingstate']").val("");				$("input[name$='_mailingzip']").val("");				$("select[name$='_mailingcountry']").val($("select[name$='_mailingcountry'] option:first").val());			}		});				itemsusage.on("change", function(e){			var selectedvalue = itemsusage.val();			if(selectedvalue == 'Others')				$("#itemsusageother").show();			else				$("#itemsusageother").hide();		});				lastdonationyear.on("change", function(e){			var selectedvalue = lastdonationyear.val();			$("input[name$='lastdonation_year']").val(selectedvalue);		});				eventdateyear.on("change", function(e){			var selectedvalue = eventdateyear.val();			$("input[name$='eventdatefields_year']").val(selectedvalue);		});				donationdateyear.on("change", function(e){			var selectedvalue = donationdateyear.val();			$("input[name$='donationdatefields_year']").val(selectedvalue);		});			lastdonationmonth.on("change", function(e) {		    populateDateDropdown('lastdonation');		});				eventdateymonth.on("change", function(e) {		    populateDateDropdown('eventdatefields');		});				donationdatemonth.on("change", function(){		    populateDateDropdown('donationdatefields');		});	}		//For business gift account request form	var businessGiftAccountForm = $("#businessgiftaccountrequest");	if(businessGiftAccountForm.length > 0) {		//Remove the mandatory check from the state		businessGiftAccountForm.find("select[name$='_stateUS']").addClass('required');		businessGiftAccountForm.find("label[for$='_stateUS']").prepend('<span class="required-indicator">*</span>');	}		//Trigger Lazyload	if(typeof(pgSz)!='undefined'){		jQuery(window).scroll( function() {			if($(window).scrollTop()+ '200' >= ($(document).height() - $(window).height()) ){				if($('.ui-widget-overlay').is(':visible')){					return false;				}				else{					reloadq();				}			}		});	}}); /* * A method to parse the response obtained from shift4. * It gets invoked automatically once the response from shift4 is obtained. */function parseResponse(data) {	var handledError = false;	var $cache = {};	$cache.primary = $('#primary');    $cache.ccName = $("input[name$='_creditCard_owner']");	$cache.ccMonth = $("select[name$='_creditCard_month']");	$cache.ccYear = $("select[name$='_creditCard_year']");	$cache.ccYearOriginal = $("select#ccyear");	$cache.ccNum = $("input[name$='_creditCard_number']");	$cache.ccCvn = $("input[name$='_creditCard_cvn']");	$cache.ccType = $("select[name$='_creditCard_type']");	$cache.authorizationToken = $("input[name$='_creditCard_authorizationToken']");		//Clear the existing errors	$cache.primary.children('.error-form').remove();	$cache.ccMonth.parent().removeClass('error');	$cache.ccMonth.next().remove();	$cache.ccYearOriginal.parent().removeClass('error');	$cache.ccNum.parent().removeClass('error');	$cache.ccNum.next().remove();	$cache.ccCvn.parent().removeClass('error');	$cache.ccCvn.next().remove();		if (data.i4go_responsecode != null) {		if (data.i4go_responsecode == 1) {			$cache.ccCvn.removeClass('digits');			//Populating the payment form fields with the response received from shift4.			$cache.authorizationToken.val(data.i4go_uniqueid);			$cache.ccMonth.val(parseInt(data.i4go_expirationmonth));			$cache.ccYear.val(data.i4go_expirationyear);			$cache.ccYearOriginal.val(data.i4go_expirationyear);			if(data.i4go_cardtype == 'AX') {				$cache.ccNum.val('***********' + data.i4go_uniqueid.substr(0,4));				$cache.ccCvn.val("****");			}			else {				$cache.ccNum.val('************' + data.i4go_uniqueid.substr(0,4));				$cache.ccCvn.val("***");			}			$cache.ccType.val(getCardType(data.i4go_cardtype));			app.progress.hide();			reviewOrder();		} else {			app.progress.hide();			var hasExceededFailedAttempts = exceededFailedAttempt();			if(!hasExceededFailedAttempts) {				if (data.i4go_responsecode.indexOf(102) != -1 || data.i4go_responsecode.indexOf(105) != -1) {					//Invalid credit card number					if(!$cache.ccNum.parent().hasClass('error')) {						$cache.ccNum.parent().addClass('error');						$cache.ccNum.parent().append('<span class="form-caption error-message">' + $('#invalid_ccnumber_error_message').val() + '</span>');					}					handledError = true;				}				if (data.i4go_responsecode.indexOf(106) != -1){					//Invalid expiration date					if(!$cache.ccMonth.parent().hasClass('error')) {						$cache.ccMonth.parent().addClass('error');						$cache.ccMonth.parent().append('<span class="form-caption error-message">' + $('#invalid_ccexp_error_message').val() + '</span>');						$cache.ccYearOriginal.parent().addClass('error');					}					handledError = true;				}				if (data.i4go_responsecode.indexOf(107) != -1 || data.i4go_responsecode.indexOf(108) != -1){					//Invalid cvv number					if(!$cache.ccCvn.parent().hasClass('error')) {						$cache.ccCvn.parent().addClass('error');						$cache.ccCvn.parent().append('<span class="form-caption error-message">' + $('#invalid_cccvn_error_message').val() + '</span>');					}					handledError = true;				}				if(!handledError) {                    $cache.ccNum.val("");                    $cache.ccCvn.val("");                    $cache.ccYearOriginal.val("");                    $cache.ccMonth.val("");                    $cache.ccType.val("");                    $cache.ccName.val("");                    					$cache.primary.prepend('<div class="error-form">' + $('#payment_gateway_error_message').val() + '</div>');				}			}		}	} else {		app.progress.hide();		var hasExceededFailedAttempts = exceededFailedAttempt();		if(!hasExceededFailedAttempts) {			$cache.primary.prepend('<div class="error-form">' + $('#payment_gateway_error_message').val() + '</div>');		}	}}/* * A method to submit the billing form to demandware. */function reviewOrder() {	$('#revieworder').unbind('click');	$('#revieworder').click();}/* * A method to determine the card type. */function getCardType(pgCardType) {	var dwCardType = pgCardType;		if(pgCardType.indexOf(PG_AMEX_CARD) > -1){		dwCardType = DW_AMEX_CARD;	} else if (pgCardType.indexOf(PG_DISCOVER_CARD) > -1){		dwCardType = DW_DISCOVER_CARD;	} else if(pgCardType.indexOf(PG_MASTER_CARD) > -1){		dwCardType = DW_MASTER_CARD;	} else {		dwCardType = DW_VISA_CARD;	}		return dwCardType;}/* * A method to determine the card type code. */function getCardTypeCode(dwCardType) {	var pgCardType = dwCardType;		if(dwCardType.indexOf(DW_AMEX_CARD) > -1){		pgCardType = PG_AMEX_CARD;	} else if (dwCardType.indexOf(DW_DISCOVER_CARD) > -1){		pgCardType = PG_DISCOVER_CARD;	} else if(dwCardType.indexOf(DW_MASTER_CARD) > -1){		pgCardType = PG_MASTER_CARD;	} else {		pgCardType = PG_VISA_CARD;	}		return pgCardType;}/* * A method to handle a failed attempt by the customer. * It incerements the global variable used for tracking the  * number of failed attempts. * If failed attempts = 3, the error page is displayed.  */function exceededFailedAttempt() {	unsuccessful_attempts++;	if(unsuccessful_attempts == 3) {		$.ajax({			type	: "GET",			url		: app.urls.exceededAttemptPGUrl,			dataType: "html",			success: function(data){				jQuery("#main").html(jQuery(data).find('#primary'));				jQuery("#main").css('background','none'); 			}		});		return true;	} else {		return false;	}}/* * A method to populate the hidden fields as per the radio button selection. * It takes two arguments - * arg 1 : the name of the radio button group * arg 2 : the name of the hidden field to be populated */function populateHiddenField(selection, hiddenfield) {	var selectedvalue = selection.filter(':checked').val();	if(selectedvalue == 'y') {		$("input[name$='_"+hiddenfield+"']").val(true);	}	else {		$("input[name$='_"+hiddenfield+"']").val(false);	}}function populateDateDropdown(datefield){	var selectedMonth = jQuery("select[id$='_"+datefield+"_month']").val();	if(selectedMonth==2){		$("select[id$='_"+datefield+"_day1']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day1']").val("");		jQuery("select[id$='_"+datefield+"_day1']").parent().hide();		jQuery("select[id$='_"+datefield+"_day1']").removeClass("required");				$("select[id$='_"+datefield+"_day']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day']").val("");		jQuery("select[id$='_"+datefield+"_day']").parent().hide();		jQuery("select[id$='_"+datefield+"_day']").removeClass("required");				$("select[id$='_"+datefield+"_day2']").attr('disabled', false);		jQuery("select[id$='_"+datefield+"_day2']").parent().show();		jQuery("select[id$='_"+datefield+"_day2']").addClass("required");	}	if(selectedMonth==4||selectedMonth==6||selectedMonth==9||selectedMonth==11){		$("select[id$='_"+datefield+"_day2']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day2']").val("");		jQuery("select[id$='_"+datefield+"_day2']").parent().hide();		jQuery("select[id$='_"+datefield+"_day2']").removeClass("required");				$("select[id$='_"+datefield+"_day']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day']").val("");		jQuery("select[id$='_"+datefield+"_day']").parent().hide();		jQuery("select[id$='_"+datefield+"_day']").removeClass("required");				$("select[id$='_"+datefield+"_day1']").attr('disabled', false);		jQuery("select[id$='_"+datefield+"_day1']").parent().show();		jQuery("select[id$='_"+datefield+"_day1']").addClass("required");	}	if(selectedMonth==0 ||selectedMonth==1||selectedMonth==3||selectedMonth==5||selectedMonth==7||selectedMonth==8||selectedMonth==10||selectedMonth==12){		$("select[id$='_"+datefield+"_day1']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day1']").val("");		jQuery("select[id$='_"+datefield+"_day1']").parent().hide();			jQuery("select[id$='_"+datefield+"_day1']").removeClass("required");				$("select[id$='_"+datefield+"_day2']").attr('disabled', true);		jQuery("select[id$='_"+datefield+"_day2']").val("");		jQuery("select[id$='_"+datefield+"_day2']").parent().hide();		jQuery("select[id$='_"+datefield+"_day2']").removeClass("required");				$("select[id$='_"+datefield+"_day']").attr('disabled', false);			jQuery("select[id$='_"+datefield+"_day']").parent().show();			jQuery("select[id$='_"+datefield+"_day']").addClass("required");	}	}//A global variable to keep track of the number of results already displayed.var completedCount=0;var newStartPos = 0;// Lazy Loading defination ....function lazyLoad(){	var oldPgSz = pgSz;	//Determine the new page size for the subsequent call being made	if(curPage == 0 && isSecondTileSelected == 'true') {		pgSz = 11;	} else if(curPage == 1 && isThirdTileSelected == 'true') {		pgSz = 11;	} else {		pgSz = 12;	}	var lmExist = (jQuery("#loadingmsg").val() == loadingText) ? true : false;	var url = app.urls.searchURL;		if(searchPhrase != '' && searchPhrase != null && searchPhrase != 'null') {		url = app.util.appendParamsToUrl(url, {q:searchPhrase});	}else {		url = app.util.appendParamsToUrl(url, {cgid:categoryId});	}	if(parseInt(curPage) <= parseInt(maxPage) && !lmExist){		if ((parseInt(totalCount) - parseInt(completedCount)) < oldPgSz ) {			completedCount = parseInt(totalCount);		} else {			completedCount = parseInt(completedCount) + parseInt(oldPgSz);		}				curPage = parseInt(curPage) + 1;		if(parseInt(completedCount) != parseInt(totalCount)){			jQuery.ajax({				type	: "POST",				url		: url,				data	: {"sz": pgSz,"start":completedCount,"format": "ajax","prefn1": prefname,"prefv1": prefvalue,"srule": srule},				dataType: "html",				beforeSend: function(xhr){					jQuery("#moreProductsDiv").hide();					jQuery("#loadingmsg").append("<img src="+app.urls.loadImageUrl+" id='loadimg' height=20px width=20px /> <span>"+app.resources.LOADING+"</span>");				},				success: function(data){					jQuery(".search-result-items").append(jQuery(data).find('li.grid-tile'));					jQuery("#moreProductsDiv").show();					jQuery("#loadimg,#loadingmsg span").remove();					//setting equal height for product block in category landing					//equalHeight();					if($(data).find("#contentTileSlot2").length>0){	            		$("#mastercontentTile2 .html-slot-container").appendTo("#contentTileSlot2");	            		$("#mastercontentTile2").empty();	            		$("#contentTileSlot2 ul.carousel").jcarousel({	        				scroll: 1,	        				wrap: null,	        				itemFallbackDimension: 275	        			});	            	}					if($(data).find("#contentTileSlot3").length>0){	            		$("#mastercontentTile3 .html-slot-container").appendTo("#contentTileSlot3");	            		$("#mastercontentTile3").empty();	            		$("#contentTileSlot3 ul.carousel").jcarousel({	        				scroll: 1,	        				wrap: null,	        				itemFallbackDimension: 275	        			});	            	}					app.product.tile.init();				},			   	failure: function(data) {				}						});		}	}}var position=0;//Lazy loading product grid function reloadq() {	position = jQuery("#moreProductsDiv").offset();	position = position.top;	if( (parseInt(totalCount) != parseInt(completedCount))) {		var scllwidth = jQuery(window).scrollTop() + $(window).height();		if (scllwidth > position) {			if(jQuery("#loadimg").length==0) {				lazyLoad();			}		}	}}/* * A method defined to submit the form rendered on a dialog. This is defined to submit the address form on multiple shipping page * the reset password form, the store info details form, etc. */function submitDialog(action, form, pli) {	var form = $('#'+form);	var dialog = $("#dialog-container");	var isValid =  form.valid();	if(isValid) {		if(action.indexOf('emailunsubscribe') != -1) {			app.progress.show($(".unsubscribe-loader"));		}		form.append("<input name='" + action + "' type='hidden' />");		var post = form.serialize();		var url = form.attr('action');		//append the format ajax to the action if the call is specific to reset password.		if(action.indexOf('password') != -1) {			url = app.util.appendParamsToUrl(url, {format:'ajax'});		}		jQuery.ajax({			type: "POST",			data: post,			url: url,			dataType: 'html',			success: function(data){				if($(data).find('.error').length > 0) {										//Screen name update					if(action.indexOf('screennameupdate') != -1) {						//Preserving the value of the referal URL						var referalURL = $('#referal').val();					} 					dialog.empty().html(data);					app.validator.init();											//re-init the checkout JS if the call is specific to checkout.					if(action.indexOf('address') != -1) {						app.checkout.init();					}											//Screen name update					if(action.indexOf('screennameupdate') != -1) {						jQuery('#ScreenNameUpdateForm input').on("keydown", function(e) {							if (e.which === 13) { $(this).parents('form').find('button#submitBtn').click(); return false;}						});												$('#referal').val(referalURL);					} 				} else {					if(action.indexOf('address') != -1) {						//If the user saved the newly added address to his profile, send across an extra parameter						if(data.indexOf('false') == -1) {							reConstructAddressDropdown(dialog, pli, true, data);						}						else {							reConstructAddressDropdown(dialog, pli, false);						}					}					if(action.indexOf('password') != -1) {						dialog.empty().html(data);						app.validator.init();					}					if(action.indexOf('storeinfo') != -1) {						dialog.empty().html(data).parent().width('500');						dialog.empty().html(data).parent().addClass('thankyou-email-storelocater');						dialog.dialog({position:'center'});						app.validator.init();					}					if(action.indexOf('emailunsubscribe') != -1) {						app.progress.hide();						dialog.empty().html(data).parent().width('400');						dialog.empty().html(data).parent().addClass('unsuscribe-page-thankyou');						dialog.dialog({position:'center', title:app.resources.EMAIL_UNSUBSCRIBE_TITLE});						app.validator.init();					}					if(action.indexOf('notifyme') != -1) {						dialog.empty().html(data).parent().width('500');						dialog.empty().html(data).parent().addClass('email-backin-stock-thankyou');						dialog.dialog({position:'center'});						app.validator.init();					}					if(action.indexOf('screennameupdate') != -1) {						var referalURL = $('#referal').val();												dialog.empty().html(data);						dialog.dialog({position:'center'});												if(referalURL != '') {							window.parent.location.href = referalURL;						}					}				}			},			failure: function(data) {				alert("${Resource.msg('global.serverconnection','locale',null)}");			}		});	} else {		form.find('input.error').first().focus();	}};//Re-construct the multiple shipping addresses drop down on addition of a new addressfunction reConstructAddressDropdown(dialog, originalpli, isSaved, savedAddressID) {	var url = app.urls.reCreateShipAdd;	url = app.util.appendParamToURL(url, 'format', 'ajax');	if(isSaved) {		url = app.util.appendParamToURL(url, 'savedAddressID', savedAddressID);	}	if($('table.multishipaddresses .shippingaddresses select').length == 0){		//Refresh the page in case the drop down for addresses does not already exist.		window.location.href = app.urls.multishippingURL;	}else {		dialog.remove();		app.progress.show('table.multishipaddresses tbody');				//Maintain the current status of all address drop downs in order to persist them later.		var oldSelections = {};		$('table.multishipaddresses').find('.shippingaddresses').each(function(){			var addressDropDown = $(this).find('select');			var pli = addressDropDown.attr('name');			var selection = addressDropDown.val();			oldSelections[pli] = selection;		});				//Reload the drop down in case the drop down already exists.		jQuery.ajax({			type: "POST",			url: url,			dataType: 'html',			success: function(response){				$('table.multishipaddresses').find('.shippingaddresses').each(function(){					$(this).find('select').html();					$(this).find('select').html(response);				});								//Reselecting the old user address selections.				$('table.multishipaddresses').find('.shippingaddresses').each(function(){					var addressDropDown = $(this).find('select');					var pli = addressDropDown.attr('name');					if(originalpli == pli && !isSaved) {						addressDropDown.find('option:last').attr('selected','selected');					}					else if(originalpli == pli && isSaved) {						//Do not change the selection if the user adds an address and saves it too. 					}					else {						addressDropDown.val(oldSelections[pli]);					}				});				app.progress.hide();			},			failure: function(response) {				alert("${Resource.msg('global.serverconnection','locale',null)}");			}		});	}}/* home page left bar script */$("ul#home-feature li:last").each(function(){    $(this).addClass("last");});/* myAccount save addresses page maxHeight script */function setHeight(column) {	var maxHeight = 0;	column = $(column);    column.each(function() {               if($(this).height() > maxHeight) {            maxHeight = $(this).height();;        }    });    column.height(maxHeight);}setHeight('.col');setHeight('.mini-address-location');setHeight('.mini-address-title');function emailgiftannouncement() {	$('#loader').empty();	var form = jQuery('#giftannouncement-form');	if(form.valid()){		$('#loader').addClass("loader loader-bg loader-indicator");		var post = form.serialize();		$.ajax({			type : "POST",			url: emailGiftAnnouncementURL,			data : post,			dataType: 'html'		}).done(function(resp) {			// success			$('#email-back-instock').hide();			//$('#emailconfirm').show();			$("#ui-dialog-title-dialog-container").hide();			app.dialog.close();			//$("#dialog-container").height('250').parent().width('500').addClass("emailconfirmation");			//$("#dialog-container").dialog({position:'center'});			$('#loader').empty();					}).fail(function(resp) {			alert("${Resource.msg('global.serverconnection','locale',null)}");				});	}	else{		form.find('input.error').first().focus();	}			}//save configurable preferences  and gender on registration page $('#savePreferences').click(function(e) {	var selectedPreferences = '';	var p1=$("#preference1").val();	var p2=$("#preference2").val();	var p3=$("#preference3").val();	selectedPreferences = p1+";"+p2+";"+p3 ;	$("input[id$='_selectedPreferenece']").val(selectedPreferences);		//populate gender input field from hidden field on reload.	var a=$("input[name='genderInput']:checked").val();		$("input[id$='_gender']").val(a);});//save configurable email perferences on platinum reward status page ---begin$('#saveEmailPreferences').click(function(e) {	var selectedPreferences = '';	var p1=$("#platinumPreference1").val();	var p2=$("#platinumPreference2").val();	var p3=$("#platinumPreference3").val();	selectedPreferences = p1+";"+p2+";"+p3 ;	$("input[id$='_selectedPreferenece']").val(selectedPreferences);		window.location.href = app.util.appendParamToURL(app.urls.emailpreferencesURL, "selectedPreferenece", selectedPreferences); });//Auto tab on phone number$(document).ready(function() {		/*	 * Trigger a dialog asking for screen name if a user logs in and has no screen name	 */	if(typeof(screenNameMissing) != 'undefined') {		if(screenNameMissing == 'true') {			var screennameupdateurl = app.urls.screenNameDialogUrl;						if(typeof(referal) != 'undefined' && referal != '') {				screennameupdateurl = app.util.appendParamToURL(screennameupdateurl, 'referal', referal);			}			var dlg = app.dialog.create({target:$("#dialog-container"), options:{				width			: 350,				height			: 'auto',				dialogClass		: 'screenNameUpdate',				title			: app.resources.SCREENNAME_UPDATE,				open			: function() {									app.validator.init();									app.focus.init();								}			}});			app.ajax.load({				url 		: screennameupdateurl,				target 		: dlg,				callback 	: function(){								dlg.dialog("open");								jQuery('#ScreenNameUpdateForm input').on("keydown", function(e) {									if (e.which === 13) { $(this).parents('form').find('button#submitBtn').click(); return false;}								});							}			});		}		}			if ((navigator.userAgent.indexOf('iPad') != -1)) {		//$('#PhoneNumberSec1, #PhoneNumberSec2, #PhoneNumberSec3').removeAttr('maxlength');	}	else{		if($("#PhoneNumberSec1").length>0){			$('#PhoneNumberSec1, #PhoneNumberSec2, #PhoneNumberSec3').autotab_magic().autotab_filter('numeric');		}		}	//Tooltip hyper link	$(".tooltip").on('click', function(e) {		e.preventDefault();		return false;		});		//Himalayan Blue sub category tab	$(".ingrdientsCnt").hide();	$(".ingrdientsCnt:first").show();	$("ul.ingrdients-tabs li").click(function(){		var curElement = $(this);		var index = curElement.index()+1;		$("ul.ingrdients-tabs li").removeClass("selected")		curElement.addClass("selected");		$(".ingrdientsCnt").hide();		$("#coltabcontent_"+index).show();	});	});//save configurable email perferences on platinum reward status page$('#saveFormEmailPreferences').click(function(e) {	var selectedPreferences = '';	 var p1=$("#platinumformPreference1").val();	 var p2=$("#platinumformPreference2").val();	 var p3=$("#platinumformPreference3").val();	selectedPreferences = p1+";"+p2+";"+p3 ;	$("input[id$='_selectedPreferenece']").val(selectedPreferences);	});//easy Scroll for new and notabledisplayedAssets=9;function easyScroll(){	currentPage = currentPage+1;	var url = app.urls.newsearchUrl;	if(currentPage < maxPage){				newStartPos = parseInt(displayedAssets);		if(totalAssets >= lastPosition) {			lastPosition = parseInt(newStartPos) + parseInt(pagesize);		}else {			lastPosition = parseInt(totalAssets);		}			}	displayedAssets=lastPosition;	if(currentPage < maxPage){		jQuery.ajax({			type	: "POST",			url		: url,			data	: {"folderid":folderid,"startPosition": newStartPos,"lastPosition":lastPosition,"format": "ajax"},			dataType: "html",			beforeSend: function(xhr){							jQuery("#moreProductsDiv").hide();				jQuery("#loadingimg").append("<img src="+app.urls.loadImageUrl+" id='loadimg' height=20px width=20px /> <span>"+app.resources.LOADING+"</span>");			},			success: function(data){				jQuery("#mainInner ul.newandnotable").append(jQuery(data).find('li.newtile'));				jQuery("#moreProductsDiv").show();				setHeight('.col');				jQuery("#loadingimg span,#loadimg").remove();				},		   	failure: function(data) {								}					});		}}//Lazy loading new and notable function reloadEasyScroll() {	if (currentPage < maxPage) {		if(jQuery("#loadimg").length==0){			easyScroll();							}	}}if(typeof(currentPage)!='undefined'){	jQuery(window).scroll( function() {		if($('.ui-widget-overlay').is(':visible')) {			return false		}		else {			if($(window).scrollTop()+ $('#footer').height() >= ($(document).height() - $(window).height())){						reloadEasyScroll();			}		}	});}//Removing link on click tooltip a tag$(".tooltip").click(function(){	return false;	});//Accordion for store locaterif ($("input[name$=_countryCode]").length) {	var countryCode = $("input[name$=_countryCode]").val();	if (countryCode != null && app.countries[countryCode]) {		c = app.countries[countryCode];		var stateSelectElem = $("select[name$='_state']");		var selectedState = stateSelectElem.val();		var form = $("form[id$='storelocator_state']");		stateSelectElem.parent().removeClass('required');		stateSelectElem.empty();				var labelSpan = form.find("label[for='"+stateSelectElem.attr('id')+"'] span").not(".required-indicator");		// set the label text		labelSpan.html(c.label);				for (var s in c.regions) {			if(s == selectedState)				stateSelectElem.append('<option value="'+s+'" selected="selected">'+c.regions[s]+'</option>');			else				stateSelectElem.append('<option value="'+s+'">'+c.regions[s]+'</option>');		}	}}$(document).ready(function() {	jQuery("form[id$='_storelocator'] input").on('keydown', function(e){		if(e.which == 13){			e.preventDefault();			$("#searchstores").click();			return false;		}	});		jQuery('#searchstores').on('click', function(){		var zipCode = jQuery('input[name$=_postalCode]').val();		var state = jQuery("select[name$=_state]").val();		var maxDistance = jQuery('.radius select').val();		if(zipCode !== "" && maxDistance != '') {			$("input[name$=_maxdistance]").val(maxDistance);			$("#searchbyzip").trigger('click');			return false;		} 		else if(zipCode != "" && maxDistance == '') {			if(!jQuery('input[name$=_postalCode]').hasClass('error')) {				jQuery('.radius select').addClass('error');				$(".field-no-distance").show();				$(".field-no-data").hide();			}			return false;		}else if(zipCode == "" && state == "") {			if(!jQuery('input[name$=_postalCode]').hasClass('error')) {				jQuery('input[name$=_postalCode]').addClass('error');			}			if(maxDistance == '' && !jQuery('.radius select').hasClass('error')) {				jQuery('.radius select').addClass('error');			}			if(!jQuery('select[name$=_state]').hasClass('error')) {				jQuery('select[name$=_state]').addClass('error');			}			$(".field-no-data").show();			$(".field-no-distance").hide();			return false;		}		else {			$("#searchbystate").trigger('click');			return false;		}	});	//Clear the postal code field when a user selects state.	jQuery("select[name$=_state]").on('change', function(){		$(".field-no-distance").hide();		$(".field-no-data").hide();		$("input[name$=_postalCode]").removeClass("error").val("").next(".error").remove();		$("select[name=maxDistance]").prop('selectedIndex',0);		if(jQuery('.radius select').hasClass('error')) {			jQuery('.radius select').removeClass('error');		}	});	//Clear the state selection when a user enters postal code.	jQuery("input[name$=_postalCode]").on('change keypress', function(){		$(".field-no-data").hide();		$("select[name$=_state]").val('');		if(jQuery('select[name$=_state]').hasClass('error')) {			jQuery('select[name$=_state]').removeClass('error')		}	});	//Clear the error when a user selects distance.	$("select[name='maxDistance']").on('change', function(){		$(".field-no-distance").hide();	});		//Set Accordion Content Width	var contentwidth = $('.accordion-header').width();	$('.accordion-box').css({'width' : contentwidth });		//Open First Accordion Section When Page Loads	$('.accordion-box open-content').slideDown();		// Accordion Effect	$('h2.accordion-header span').click(function () {		if($(this).parent().is('.inactive-header')) {			$('.active-header').toggleClass('active-header').toggleClass('inactive-header').next().slideToggle().toggleClass('open-content');			//$('form[id$=_storelocator], form[id$=_storelocator_int], form[id$=_storelocator_state]').find('input[name$=_postalCode],select').removeClass('error').val('');			$('input[name$=_postalCode].error').removeClass('error').val('');			$('span.error').remove();			$(this).parent().toggleClass('active-header').toggleClass('inactive-header');			$(this).parent().next().slideToggle().toggleClass('open-content');		}	});});//#emailSubscriptionFooter(function(){	$("#emailfooter").on('mousedown', function(){		if($("#footerText").val() == app.resources.EMAIL_PLACEHOLDER) $("#footerText").val("");	});	if ($("#footerText").length) {		$("#footerText").focus(function() {			$('#subscription-message').html("");			var elm = $(this);			if (elm.next('span.error').is(':empty')) elm.next('span.error').css({'display': 'none'});						if ($.trim(elm.val()) == app.resources.EMAIL_PLACEHOLDER) elm.val('');		}).blur(function() {			var elm = $(this);			if (elm.next('span.error').is(':empty')) elm.next('span.error').css({'display': 'none'});			if ($.trim(elm.val()) == '') elm.val(app.resources.EMAIL_PLACEHOLDER).removeClass('error');			else if ($.trim(elm.val()) == app.resources.EMAIL_PLACEHOLDER) elm.removeClass('error');		});	}		/* Ordering and payment under Customer Care page */	$(document).on('click', '.back-to-top', function() {		app.util.scrollBrowser(0);		return false;	});}());//#emailSubscriptionFooterfunction emailSubscriptionFooter() {	$('#subscription-message').html('');	var elm = $("#footerText");		var form = $('#emailSubscriptionFooter');	if(typeof String.prototype.trim !== 'function') {		String.prototype.trim = function() {			return this.replace(/^\s+|\s+$/g, ''); 		}	}		var email = elm.val().trim(' ');			if(email == app.resources.EMAIL_PLACEHOLDER) {				elm.addClass('error').focus();		return false;	}		if(form.valid()) {		var url = app.urls.footerEmailSubscribe;		url = app.util.appendParamsToUrl(url,{email:email});				app.progress.show($(".email-subscription"));		app.ajax.getJson({			url: url,			callback: function (data) {				if(data.success) {					$('#subscription-message').html(app.resources.SUBSCRIPTION_MSG);					elm.val(app.resources.EMAIL_PLACEHOLDER);					app.progress.hide();				}			}		});	} else {		elm.focus();	}}//populate gender form field	$("input[name='genderInput']").on("change", function(){	    		var a=$("input[name='genderInput']:checked").val();		$("input[id$='_gender']").val(a);	    		    	});function populateBirthdayDropdown(){	var selectedMonth=jQuery("select[id$='_birthdayfields_month']").val();	if(selectedMonth==2){		$("select[id$='_birthdayfields_day1']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day1']").hide();		jQuery("select[id$='_birthdayfields_day1']").removeClass("required");				$("select[id$='_birthdayfields_day']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day']").hide();		jQuery("select[id$='_birthdayfields_day']").removeClass("required");				$("select[id$='_birthdayfields_day2']").attr('disabled', false);			jQuery("select[id$='_birthdayfields_day2']").show();		jQuery("select[id$='_birthdayfields_day2']").addClass("required");	}	if(selectedMonth==4||selectedMonth==6||selectedMonth==9||selectedMonth==11){		$("select[id$='_birthdayfields_day2']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day2']").hide();		jQuery("select[id$='_birthdayfields_day2']").removeClass("required");				$("select[id$='_birthdayfields_day']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day']").hide();			jQuery("select[id$='_birthdayfields_day']").removeClass("required");				$("select[id$='_birthdayfields_day1']").attr('disabled', false);			jQuery("select[id$='_birthdayfields_day1']").show();		jQuery("select[id$='_birthdayfields_day1']").addClass("required");	}	if(selectedMonth==0 ||selectedMonth==1||selectedMonth==3||selectedMonth==5||selectedMonth==7||selectedMonth==8||selectedMonth==10||selectedMonth==12){		$("select[id$='_birthdayfields_day1']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day1']").hide();			jQuery("select[id$='_birthdayfields_day1']").removeClass("required");				$("select[id$='_birthdayfields_day2']").attr('disabled', true);								jQuery("select[id$='_birthdayfields_day2']").hide();		jQuery("select[id$='_birthdayfields_day2']").removeClass("required");				$("select[id$='_birthdayfields_day']").attr('disabled', false);			jQuery("select[id$='_birthdayfields_day']").show();			jQuery("select[id$='_birthdayfields_day']").addClass("required");	}	}$(document).ready(function($){	displayedcoll=9;	jQuery("#loadingmsg #loadimg #loadspan").remove()	function endlessscroll(){		currCollPage=currCollPage+1;		var url =app.urls.searchUrl;		if(currCollPage < maxPage){					newStartPos = parseInt(displayedcoll);			if(totalcoll - collpagesize>=collastPosition) {				collastPosition = 	parseInt(newStartPos) + parseInt(collpagesize) -1;			}else {				collastPosition =  parseInt(totalcoll);			}				}				displayedcoll=collastPosition +1;		if(currCollPage < maxPage){									jQuery.ajax({				type	: "POST",				url		: url,				data	: {"startPosition": newStartPos,"lastPosition":collastPosition,"format": "ajax"},				dataType: "html",				beforeSend: function(xhr){												jQuery("#moreProductsDiv").hide();					jQuery("#loadingmsg").append("<img src="+app.urls.loadImageUrl+" id='loadimg' height=20px width=20px /> <span id='loadspan' >"+app.resources.LOADING+"</span>");				},				success: function(data){										jQuery("ul#search-result-items").append(jQuery(data).find('li.grid-tile'));					jQuery("#moreProductsDiv").show();					jQuery("#loadingmsg #loadimg").remove();										jQuery("#loadspan").remove();									},			   	failure: function(data) {										}						});	 		}	}	//Lazy loading product grid 	function reloadendlessscroll() {		if (currCollPage < maxPage) {						if(jQuery("#loadspan").length==0){					endlessscroll();								}		}	}	if(typeof(currCollPage)!='undefined'){		$(window).scroll(function(){			if($(window).scrollTop() + $('#footer').height() >= ($(document).height() - $(window).height())){				reloadendlessscroll();			}		});		}		//platinum reward section display -------begin	if ($("input[id$='_showPlatinumReward']").is(':checked')) {		$('#platinumRewardNew :input').attr('disabled', false);		$('#platinumRewardNew').show();	} else {		$('#platinumRewardNew :input').attr('disabled', true);		$("#platinumRewardNew").hide();	}	$("form").submit(function(){		$("input.error:first").focus();	});		// StoreCheckBox Disabled			if($('#availableStores').val()){		var stores = $('#availableStores').val().split(':');		var avail ="";		for(i = 0; i<stores.length-1; i++) {		    avail += "#" + stores[i] + ",";		}		var checkboxesToShow = avail.substr(0, avail.length-1);		$('#storelocator input[type=checkbox]').attr('disabled', true)	    $(checkboxesToShow).removeAttr('disabled');		$('#storelocator input:disabled').attr('checked', false)	}		// Home page left product li 	$('.home-bottom-left li').eq(2).css('border', 'none');	$(".recommendation li:last").css("border", "none");		//Collection page active class in top nav 	$(".collection-heading").each(function(){	    $("li#catdd_collections a.level-1").addClass("active");	});	$(".notablecontent").each(function(){	    $("li#catdd_new-notable a.level-1").addClass("active");	});	//Reset message character limit counter on Cancel Button	$(".resetMsgCounter").on('click', function(){	    $("span#charLeft").html("250");	});	//Erase all error messages when clicking cancel button	$(".clearErrorMsg").on('click', function(){		var formId = $(this).closest("form");		var validator = $(formId).validate();		validator.resetForm();	});	//Search icon border should be red on NULL value search	$(".search-button").on('click focus', function(){			if($("#q").val() == app.resources.SEARCH_KEYWORD) {				$(this).css({"border":"1px solid #ff0000", 'background-position-x': '0px'});		}		else {					$(this).css({"border-style":"solid none none", "border-color":"#cccccc"});		}		});	// positioning dialog poping within dialog to center of screen	jQuery(".email-storeinfo-link").live('click',function() {		var x =$(window).width()/2 - $(".email-store-locator-dialog").width()/2;		var y = jQuery(document).scrollTop()+jQuery(this).position().top;		$('.ui-dialog').css("left",x); 		$('.ui-dialog').css("top",y);			});	//drop down menu	$("#navigation ul.menu-category > li").each(function(){	    var w = 0; 	    $(this).find('ul.level-2').each(function() {	    	w  += $(this).width();	    });	    	    var c = $(this).find('ul.custom').width();	    var leftPos = $(this).position().left;	    var t = 20 + Math.ceil(w +c)	    var toW = t+ leftPos;		if( navigator.userAgent.indexOf('Chrome') > -1 || navigator.userAgent.indexOf('Safari') > -1){			t=t+20;		}	    $(this).find("div.level-2").width(t+5);		    		if(toW >= 1010){		    $(this).find("div.level-2").css({"right": 0, "width": t+5})		}			// navigation show and hide		$(this).hover(function(){			$("div.level-2").css({"opacity": "0"})			$("div.level-2",this).css({'visibility':'visible'}).animate({"opacity": "1"})		}, function(){			$("div.level-2",this).css({'visibility': 'hidden'});			$("div.level-2").css({"opacity": "0"})		});	});});