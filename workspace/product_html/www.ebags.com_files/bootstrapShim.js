/*!
 * Bootstrap v3.1.0 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

if ("undefined" === typeof jQuery) throw Error("Bootstrap's JavaScript requires jQuery"); +function (d) { d.fn.emulateTransitionEnd = function (c) { var g = !1, a = this; d(this).one(d.support.transition.end, function () { g = !0 }); setTimeout(function () { g || d(a).trigger(d.support.transition.end) }, c); return this }; d(function () { var c = d.support, g; a: { g = document.createElement("bootstrap"); var a = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" }, b; for (b in a) if (void 0 !== g.style[b]) { g = { end: a[b] }; break a } g = !1 } c.transition = g }) }(jQuery); +function (d) { function c(e) { d(a).remove(); d(b).each(function () { var a = g(d(this)), b = { relatedTarget: this }; a.hasClass("open") && (a.trigger(e = d.Event("hide.bs.dropdown", b)), e.isDefaultPrevented() || a.removeClass("open").trigger("hidden.bs.dropdown", b)) }) } function g(a) { var b = a.attr("data-target"); b || (b = (b = a.attr("href")) && /#[A-Za-z]/.test(b) && b.replace(/.*(?=#[^\s]*$)/, "")); return (b = b && d(b)) && b.length ? b : a.parent() } var a = ".dropdown-backdrop", b = "[data-toggle=dropdown]", e = function (a) { d(a).on("click.bs.dropdown", this.toggle) }; e.prototype.toggle = function (a) { var b = d(this); if (!b.is(".disabled, :disabled")) { var e = g(b); a = e.hasClass("open"); c(); if (!a) { if ("ontouchstart" in document.documentElement && !e.closest(".navbar-nav").length) d('<div class="dropdown-backdrop"/>').insertAfter(d(this)).on("click", c); var f = { relatedTarget: this }; e.trigger(a = d.Event("show.bs.dropdown", f)); if (a.isDefaultPrevented()) return; e.toggleClass("open").trigger("shown.bs.dropdown", f); b.focus() } return !1 } }; e.prototype.keydown = function (a) { if (/(38|40|27)/.test(a.keyCode)) { var e = d(this); a.preventDefault(); a.stopPropagation(); if (!e.is(".disabled, :disabled")) { var c = g(e), f = c.hasClass("open"); if (!f || f && 27 == a.keyCode) return 27 == a.which && c.find(b).focus(), e.click(); e = c.find("[role=menu] li:not(.divider):visible a, [role=listbox] li:not(.divider):visible a"); e.length && (c = e.index(e.filter(":focus")), 38 == a.keyCode && 0 < c && c--, 40 == a.keyCode && c < e.length - 1 && c++, ~c || (c = 0), e.eq(c).focus()) } } }; var f = d.fn.dropdown; d.fn.dropdown = function (a) { return this.each(function () { var b = d(this), c = b.data("bs.dropdown"); c || b.data("bs.dropdown", c = new e(this)); "string" == typeof a && c[a].call(b) }) }; d.fn.dropdown.Constructor = e; d.fn.dropdown.noConflict = function () { d.fn.dropdown = f; return this }; d(document).on("click.bs.dropdown.data-api", c).on("click.bs.dropdown.data-api", ".dropdown form", function (a) { a.stopPropagation() }).on("click.bs.dropdown.data-api", b, e.prototype.toggle).on("keydown.bs.dropdown.data-api", b + ", [role=menu], [role=listbox]", e.prototype.keydown) }(jQuery); +function (d) { var c = function (a, b) { this.options = b; this.$element = d(a); this.$backdrop = this.isShown = null; this.options.remote && this.$element.find(".modal-content").load(this.options.remote, d.proxy(function () { this.$element.trigger("loaded.bs.modal") }, this)) }; c.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }; c.prototype.toggle = function (a) { return this[this.isShown ? "hide" : "show"](a) }; c.prototype.show = function (a) { var b = this, e = d.Event("show.bs.modal", { relatedTarget: a }); this.$element.trigger(e); this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.escape(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', d.proxy(this.hide, this)), this.backdrop(function () { var e = d.support.transition && b.$element.hasClass("fade"); b.$element.parent().length || b.$element.appendTo(document.body); b.$element.show().scrollTop(0); e && b.$element[0].offsetWidth; b.$element.addClass("in").attr("aria-hidden", !1); b.enforceFocus(); var c = d.Event("shown.bs.modal", { relatedTarget: a }); e ? b.$element.find(".modal-dialog").one(d.support.transition.end, function () { b.$element.focus().trigger(c) }).emulateTransitionEnd(300) : b.$element.focus().trigger(c) })) }; c.prototype.hide = function (a) { a && a.preventDefault(); a = d.Event("hide.bs.modal"); this.$element.trigger(a); this.isShown && !a.isDefaultPrevented() && (this.isShown = !1, this.escape(), d(document).off("focusin.bs.modal"), this.$element.removeClass("in").attr("aria-hidden", !0).off("click.dismiss.bs.modal"), d.support.transition && this.$element.hasClass("fade") ? this.$element.one(d.support.transition.end, d.proxy(this.hideModal, this)).emulateTransitionEnd(300) : this.hideModal()) }; c.prototype.enforceFocus = function () { d(document).off("focusin.bs.modal").on("focusin.bs.modal", d.proxy(function (a) { this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.focus() }, this)) }; c.prototype.escape = function () { if (this.isShown && this.options.keyboard) this.$element.on("keyup.dismiss.bs.modal", d.proxy(function (a) { 27 == a.which && this.hide() }, this)); else this.isShown || this.$element.off("keyup.dismiss.bs.modal") }; c.prototype.hideModal = function () { var a = this; this.$element.hide(); this.backdrop(function () { a.removeBackdrop(); a.$element.trigger("hidden.bs.modal") }) }; c.prototype.removeBackdrop = function () { this.$backdrop && this.$backdrop.remove(); this.$backdrop = null }; c.prototype.backdrop = function (a) { var b = this.$element.hasClass("fade") ? "fade" : ""; if (this.isShown && this.options.backdrop) { var e = d.support.transition && b; this.$backdrop = d('<div class="modal-backdrop ' + b + '" />').appendTo(document.body); this.$element.on("click.dismiss.bs.modal", d.proxy(function (a) { a.target === a.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus.call(this.$element[0]) : this.hide.call(this)) }, this)); e && this.$backdrop[0].offsetWidth; this.$backdrop.addClass("in"); a && (e ? this.$backdrop.one(d.support.transition.end, a).emulateTransitionEnd(150) : a()) } else !this.isShown && this.$backdrop ? (this.$backdrop.removeClass("in"), d.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one(d.support.transition.end, a).emulateTransitionEnd(150) : a()) : a && a() }; var g = d.fn.modal; d.fn.modal = function (a, b) { return this.each(function () { var e = d(this), f = e.data("bs.modal"), g = d.extend({}, c.DEFAULTS, e.data(), "object" == typeof a && a); f || e.data("bs.modal", f = new c(this, g)); if ("string" == typeof a) f[a](b); else g.show && f.show(b) }) }; d.fn.modal.Constructor = c; d.fn.modal.noConflict = function () { d.fn.modal = g; return this }; d(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (a) { var b = d(this), e = b.attr("href"), c = d(b.attr("data-target") || e && e.replace(/.*(?=#[^\s]+$)/, "")), e = c.data("bs.modal") ? "toggle" : d.extend({ remote: !/#/.test(e) && e }, c.data(), b.data()); b.is("a") && a.preventDefault(); c.modal(e, this).one("hide", function () { b.is(":visible") && b.focus() }) }); d(document).on("show.bs.modal", ".modal", function () { d(document.body).addClass("modal-open") }).on("hidden.bs.modal", ".modal", function () { d(document.body).removeClass("modal-open") }) }(jQuery); +function (d) { var c = function (a, b) { this.type = this.options = this.enabled = this.timeout = this.hoverState = this.$element = null; this.init("tooltip", a, b) }; c.DEFAULTS = { animation: !0, placement: "top", selector: !1, template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: !1, container: !1 }; c.prototype.init = function (a, b, e) { this.enabled = !0; this.type = a; this.$element = d(b); this.options = this.getOptions(e); a = this.options.trigger.split(" "); for (b = a.length; b--;) if (e = a[b], "click" == e) this.$element.on("click." + this.type, this.options.selector, d.proxy(this.toggle, this)); else if ("manual" != e) { var c = "hover" == e ? "mouseleave" : "focusout"; this.$element.on(("hover" == e ? "mouseenter" : "focusin") + "." + this.type, this.options.selector, d.proxy(this.enter, this)); this.$element.on(c + "." + this.type, this.options.selector, d.proxy(this.leave, this)) } this.options.selector ? this._options = d.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle() }; c.prototype.getDefaults = function () { return c.DEFAULTS }; c.prototype.getOptions = function (a) { a = d.extend({}, this.getDefaults(), this.$element.data(), a); a.delay && "number" == typeof a.delay && (a.delay = { show: a.delay, hide: a.delay }); return a }; c.prototype.getDelegateOptions = function () { var a = {}, b = this.getDefaults(); this._options && d.each(this._options, function (d, c) { b[d] != c && (a[d] = c) }); return a }; c.prototype.enter = function (a) { var b = a instanceof this.constructor ? a : d(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type); clearTimeout(b.timeout); b.hoverState = "in"; if (!b.options.delay || !b.options.delay.show) return b.show(); b.timeout = setTimeout(function () { "in" == b.hoverState && b.show() }, b.options.delay.show) }; c.prototype.leave = function (a) { var b = a instanceof this.constructor ? a : d(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type); clearTimeout(b.timeout); b.hoverState = "out"; if (!b.options.delay || !b.options.delay.hide) return b.hide(); b.timeout = setTimeout(function () { "out" == b.hoverState && b.hide() }, b.options.delay.hide) }; c.prototype.show = function () { var a = d.Event("show.bs." + this.type); if (this.hasContent() && this.enabled && (this.$element.trigger(a), !a.isDefaultPrevented())) { var b = this, a = this.tip(); this.setContent(); this.options.animation && a.addClass("fade"); var e = "function" == typeof this.options.placement ? this.options.placement.call(this, a[0], this.$element[0]) : this.options.placement, c = /\s?auto?\s?/i, g = c.test(e); g && (e = e.replace(c, "") || "top"); a.detach().css({ top: 0, left: 0, display: "block" }).addClass(e); this.options.container ? a.appendTo(this.options.container) : a.insertAfter(this.$element); var c = this.getPosition(), l = a[0].offsetWidth, k = a[0].offsetHeight; if (g) { var h = this.$element.parent(), g = e, m = document.documentElement.scrollTop || document.body.scrollTop, n = "body" == this.options.container ? window.innerWidth : h.outerWidth(), p = "body" == this.options.container ? window.innerHeight : h.outerHeight(), h = "body" == this.options.container ? 0 : h.offset().left, e = "bottom" == e && c.top + c.height + k - m > p ? "top" : "top" == e && 0 > c.top - m - k ? "bottom" : "right" == e && c.right + l > n ? "left" : "left" == e && c.left - l < h ? "right" : e; a.removeClass(g).addClass(e) } c = this.getCalculatedOffset(e, c, l, k); this.applyPlacement(c, e); this.hoverState = null; e = function () { b.$element.trigger("shown.bs." + b.type) }; d.support.transition && this.$tip.hasClass("fade") ? a.one(d.support.transition.end, e).emulateTransitionEnd(150) : e() } }; c.prototype.applyPlacement = function (a, b) { var c, f = this.tip(), g = f[0].offsetWidth, l = f[0].offsetHeight, k = parseInt(f.css("margin-top"), 10), h = parseInt(f.css("margin-left"), 10); isNaN(k) && (k = 0); isNaN(h) && (h = 0); a.top += k; a.left += h; d.offset.setOffset(f[0], d.extend({ using: function (a) { f.css({ top: Math.round(a.top), left: Math.round(a.left) }) } }, a), 0); f.addClass("in"); k = f[0].offsetWidth; h = f[0].offsetHeight; "top" == b && h != l && (c = !0, a.top = a.top + l - h); /bottom|top/.test(b) ? (l = 0, 0 > a.left && (l = -2 * a.left, a.left = 0, f.offset(a), k = f[0].offsetWidth, h = f[0].offsetHeight), this.replaceArrow(l - g + k, k, "left")) : this.replaceArrow(h - l, h, "top"); c && f.offset(a) }; c.prototype.replaceArrow = function (a, b, c) { this.arrow().css(c, a ? 50 * (1 - a / b) + "%" : "") }; c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(); a.find(".tooltip-inner")[this.options.html ? "html" : "text"](b); a.removeClass("fade in top bottom left right") }; c.prototype.hide = function () { function a() { "in" != b.hoverState && c.detach(); b.$element.trigger("hidden.bs." + b.type) } var b = this, c = this.tip(), f = d.Event("hide.bs." + this.type); this.$element.trigger(f); if (!f.isDefaultPrevented()) return c.removeClass("in"), d.support.transition && this.$tip.hasClass("fade") ? c.one(d.support.transition.end, a).emulateTransitionEnd(150) : a(), this.hoverState = null, this }; c.prototype.fixTitle = function () { var a = this.$element; (a.attr("title") || "string" != typeof a.attr("data-original-title")) && a.attr("data-original-title", a.attr("title") || "").attr("title", "") }; c.prototype.hasContent = function () { return this.getTitle() }; c.prototype.getPosition = function () { var a = this.$element[0]; return d.extend({}, "function" == typeof a.getBoundingClientRect ? a.getBoundingClientRect() : { width: a.offsetWidth, height: a.offsetHeight }, this.$element.offset()) }; c.prototype.getCalculatedOffset = function (a, b, c, d) { return "bottom" == a ? { top: b.top + b.height, left: b.left + b.width / 2 - c / 2 } : "top" == a ? { top: b.top - d, left: b.left + b.width / 2 - c / 2 } : "left" == a ? { top: b.top + b.height / 2 - d / 2, left: b.left - c } : { top: b.top + b.height / 2 - d / 2, left: b.left + b.width } }; c.prototype.getTitle = function () { var a = this.$element, b = this.options; return a.attr("data-original-title") || ("function" == typeof b.title ? b.title.call(a[0]) : b.title) }; c.prototype.tip = function () { return this.$tip = this.$tip || d(this.options.template) }; c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow") }; c.prototype.validate = function () { this.$element[0].parentNode || (this.hide(), this.options = this.$element = null) }; c.prototype.enable = function () { this.enabled = !0 }; c.prototype.disable = function () { this.enabled = !1 }; c.prototype.toggleEnabled = function () { this.enabled = !this.enabled }; c.prototype.toggle = function (a) { a = a ? d(a.currentTarget)[this.type](this.getDelegateOptions()).data("bs." + this.type) : this; a.tip().hasClass("in") ? a.leave(a) : a.enter(a) }; c.prototype.destroy = function () { clearTimeout(this.timeout); this.hide().$element.off("." + this.type).removeData("bs." + this.type) }; var g = d.fn.tooltip; d.fn.tooltip = function (a) { return this.each(function () { var b = d(this), e = b.data("bs.tooltip"), f = "object" == typeof a && a; if (e || "destroy" != a) if (e || b.data("bs.tooltip", e = new c(this, f)), "string" == typeof a) e[a]() }) }; d.fn.tooltip.Constructor = c; d.fn.tooltip.noConflict = function () { d.fn.tooltip = g; return this } }(jQuery); +function (d) { var c = function (a, b) { this.init("popover", a, b) }; if (!d.fn.tooltip) throw Error("Popover requires tooltip.js"); c.DEFAULTS = d.extend({}, d.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }); c.prototype = d.extend({}, d.fn.tooltip.Constructor.prototype); c.prototype.constructor = c; c.prototype.getDefaults = function () { return c.DEFAULTS }; c.prototype.setContent = function () { var a = this.tip(), b = this.getTitle(), c = this.getContent(); a.find(".popover-title")[this.options.html ? "html" : "text"](b); a.find(".popover-content")[this.options.html ? "string" == typeof c ? "html" : "append" : "text"](c); a.removeClass("fade top bottom left right in"); a.find(".popover-title").html() || a.find(".popover-title").hide() }; c.prototype.hasContent = function () { return this.getTitle() || this.getContent() }; c.prototype.getContent = function () { var a = this.$element, b = this.options; return a.attr("data-content") || ("function" == typeof b.content ? b.content.call(a[0]) : b.content) }; c.prototype.arrow = function () { return this.$arrow = this.$arrow || this.tip().find(".arrow") }; c.prototype.tip = function () { this.$tip || (this.$tip = d(this.options.template)); return this.$tip }; var g = d.fn.popover; d.fn.popover = function (a) { return this.each(function () { var b = d(this), e = b.data("bs.popover"), f = "object" == typeof a && a; if (e || "destroy" != a) if (e || b.data("bs.popover", e = new c(this, f)), "string" == typeof a) e[a]() }) }; d.fn.popover.Constructor = c; d.fn.popover.noConflict = function () { d.fn.popover = g; return this } }(jQuery);
$(function () { $(".modal-popover").each(function () { var a = $(this); if ("ontouchstart" in document.documentElement) { var c = $(a.data("target")); a.data("toggle", "modal"); a.on("click", function (a) { a.preventDefault(); c.modal() }) } else { var b = $(a.data("target")); a.popover({ html: !0, trigger: "hover", title: b.find(".modal-title").html(), content: b.find(".modal-body").html() }) } }) });
define("bootstrap/eBagsPopover", function () { function a() { $(this).popover("hide") } $(".eBagsPopover").on("show.bs.popover", function () { $("#masterContainer").on("click", a) }); $(".eBagsPopover").on("hide.bs.popover", function () { $("#masterContainer").off("click", a) }) });
